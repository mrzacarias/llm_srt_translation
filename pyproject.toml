[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "llm-srt-translation"
dynamic = ["version"]
description = "A powerful tool for translating SRT subtitle files using Amazon Bedrock's LLM models"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "mrzacarias", email = ""}
]
maintainers = [
    {name = "mrzacarias", email = ""}
]
keywords = ["srt", "subtitle", "translation", "llm", "bedrock", "claude", "aws"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Video",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
]
requires-python = ">=3.8"
dependencies = [
    "boto3>=1.34.0",
    "langdetect>=1.0.9",
    "polyglot>=16.7.4",
    "pycld2>=0.41",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "flake8>=6.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]

[project.scripts]
srt-translator = "srt_translator:main"
compare-translations = "compare_translations:main"

[project.urls]
Homepage = "https://github.com/mrzacarias/llm_srt_translation"
Documentation = "https://github.com/mrzacarias/llm_srt_translation#readme"
Repository = "https://github.com/mrzacarias/llm_srt_translation"
"Bug Tracker" = "https://github.com/mrzacarias/llm_srt_translation/issues"

[tool.setuptools.dynamic]
version = {attr = "srt_translator.__version__"}

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*", "docs*", ".github*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["srt_translator", "compare_translations"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=srt_translator",
    "--cov=compare_translations",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["srt_translator", "compare_translations"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"] 
